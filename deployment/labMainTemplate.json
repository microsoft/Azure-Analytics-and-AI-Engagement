{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "String",
            "metadata": {
                "description": "The name of the VM"
            }
        },
        "virtualMachineSize": {
            "defaultValue": "Standard_D8s_v3",
            "type": "String",
            "metadata": {
                "description": "The virtual machine size."
            }
        },
        "virtualNetworkName": {
            "type": "String",
            "metadata": {
                "description": "The name of the VNet."
            }
        },
        "subnetName": {
            "defaultValue": "default",
            "type": "String",
            "metadata": {
                "description": "The name of the subnet."
            }
        },
        "addressSpace": {
            "defaultValue": [
                "10.0.0.0/16"
            ],
            "type": "Array",
            "metadata": {
                "description": "The address space of the VNet."
            }
        },
        "subnetPrefix": {
            "defaultValue": "10.0.0.0/24",
            "type": "String",
            "metadata": {
                "description": "The address prefix of the subnet."
            }
        },
        "imageOffer": {
            "defaultValue": "sql2019-ws2022",
            "allowedValues": [
                "sql2019-ws2019",
                "sql2017-ws2019",
                "sql2019-ws2022",
                "SQL2016SP1-WS2016",
                "SQL2016SP2-WS2016",
                "SQL2014SP3-WS2012R2",
                "SQL2014SP2-WS2012R2"
            ],
            "type": "String",
            "metadata": {
                "description": "Windows Server and SQL Offer"
            }
        },
        "sqlSku": {
            "defaultValue": "enterprise-gen2",
            "allowedValues": [
                "standard-gen2",
                "enterprise-gen2",
                "SQLDEV-gen2",
                "web-gen2",
                "enterprisedbengineonly-gen2"
            ],
            "type": "String",
            "metadata": {
                "description": "SQL Server Sku"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "The admin user name of the VM"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The admin password of the VM"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "secureBoot": {
            "defaultValue": true,
            "type": "Bool",
            "metadata": {
                "description": "Secure Boot setting of the virtual machine."
            }
        },
        "vTPM": {
            "defaultValue": true,
            "type": "Bool",
            "metadata": {
                "description": "vTPM setting of the virtual machine."
            }
        },
        "storage_account_name": {
            "type": "String",
            "metadata": {
                "description": "The name of the storage account"
            }
        },
        "mssql_server_name": {
            "type": "String",
            "metadata": {
                "description": "The name of the SQL server"
            }
        },
        "mssql_database_name": {
            "type": "String",
            "metadata": {
                "description": "The name of the SQL database"
            }
        },
        "mssql_administrator_login": {
            "type": "String",
            "metadata": {
                "description": ""
            }
        },
        "sql_administrator_login_password": {
            "type": "String",
            "metadata": {
                "description": ""
            }
        },
        "azure_open_ai" :
        {
            "type": "string"
        },
        
        "openAI_location" : 
        {"type": "string"
        },
        
        "networkInterfaceName": {
        "type" : "string"
        },

        "publicIpAddressName": {
            "type": "string"        
        },
        "networkSecurityGroupname": {
            "type": "String"
        }
    },
    "variables": {
       
        "networkSecurityGroupName": "[format('{0}-nsg', parameters('virtualMachineName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroupname')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAnyRDPOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroupname'), 'AllowAnyRDPOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyRDPInbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroupname'), 'AllowAnyRDPInbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-01-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressSpace')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-01-01",
            "name": "[parameters('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-01-01",
            "name": "[parameters('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupname'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },        
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('sqlSku')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true
                    }
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": "[parameters('secureBoot')]",
                        "vTpmEnabled": "[parameters('vTPM')]"
                    },
                    "securityType": "TrustedLaunch"
                }
            }
        },
        {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('virtualMachineName'),'/', 'winExtension')]",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "comments": "Script",
        "tags": {
          "displayName": "VM Extension"
        },
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.8",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "https://stfabcon.blob.core.windows.net/sqlscript/startup.ps1"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File startup.ps1"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
        "apiVersion": "2024-05-01",
        "name": "[concat(parameters('networkSecurityGroupname'), '/AllowAnyRDPInbound')]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupname'))]"
        ],
        "properties": {
            "protocol": "TCP",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 110,
            "direction": "Inbound",
            "sourcePortRanges": [],
            "destinationPortRanges": [],
            "sourceAddressPrefixes": [],
            "destinationAddressPrefixes": []
        }
        },
        {
            "name": "[parameters('storage_account_name')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": "true",
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "name": "[concat(parameters('storage_account_name'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                        {
                            "allowedOrigins": [
                                "*"
                            ],
                            "allowedMethods": [
                                "GET"
                            ],
                            "maxAgeInSeconds": 1000,
                            "exposedHeaders": [
                                "*"
                            ],
                            "allowedHeaders": [
                                "*"
                            ]
                        },
                        {
                            "allowedOrigins": [
                                "*"
                            ],
                            "allowedMethods": [
                                "POST"
                            ],
                            "maxAgeInSeconds": 1000,
                            "exposedHeaders": [
                                "*"
                            ],
                            "allowedHeaders": [
                                "*"
                            ]
                        },
                        {
                            "allowedOrigins": [
                                "*"
                            ],
                            "allowedMethods": [
                                "DELETE"
                            ],
                            "maxAgeInSeconds": 1000,
                            "exposedHeaders": [
                                "*"
                            ],
                            "allowedHeaders": [
                                "*"
                            ]
                        },
                        {
                            "allowedOrigins": [
                                "*"
                            ],
                            "allowedMethods": [
                                "MERGE"
                            ],
                            "maxAgeInSeconds": 1000,
                            "exposedHeaders": [
                                "*"
                            ],
                            "allowedHeaders": [
                                "*"
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('storage_account_name'), '/default/data')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Container"
            }
        },
        {
            "name": "[parameters('mssql_server_name')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2022-05-01-preview",
            "location": "[parameters('location')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('mssql_administrator_login')]",
                "administratorLoginPassword": "[parameters('sql_administrator_login_password')]",
                "version": "12.0"
            }
        },
        {
            "name": "[concat(parameters('mssql_server_name'), '/', parameters('mssql_database_name'))]",
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2022-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('mssql_server_name'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS"
            }
        },
        {
            "name": "[concat(parameters('mssql_server_name'), '/AllowAzureIPs')]",
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2022-05-01-preview",
            "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('mssql_server_name'))]",
                "[concat('Microsoft.Sql/servers/', parameters('mssql_server_name'),'/databases/' , parameters('mssql_database_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('azure_open_ai')]",
            "location": "[parameters('openAI_location')]",
            "sku": {
              "name": "S0"
            },
            "kind": "OpenAI",
            "properties": {
              "customSubDomainName": "[parameters('azure_open_ai')]",
              "networkAcls": {
                "defaultAction": "Allow"
              },
              "publicNetworkAccess": "Enabled"
            }
          }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}