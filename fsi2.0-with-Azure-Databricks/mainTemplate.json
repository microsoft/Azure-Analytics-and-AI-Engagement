{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "mssql_server_name": {
    "type": "String",
    "metadata": {
      "description": ""
    }
    },
    "mssql_database_name": {
      "type": "String",
      "metadata": {
        "description": ""
      }
    },
    "mssql_administrator_login": {
      "type": "String",
      "metadata": {
        "description": ""
      }
    },
    "sql_administrator_login_password": {
      "type": "String",
      "metadata": {
        "description": ""
      }
    },

    "cosmosdb_fsi2_name": {
        "defaultValue": "cosmosdb-fsi-fabric",
        "type": "String"
    },
    "storage_account_name": {
        "type": "string"
    },
    "location": {
        "type": "string"
    },
    "databricks_workspace_name": {
      "type": "string"
    },
    "databricks_managed_resource_group_name": {
      "type": "string"
    },
    "userAssignedIdentities_ami_databricks_build" : {
      "type": "string"
    },
    "vaults_kv_databricks_prod_name" :{
      "type": "string"
    },
    "datalake_account_name" :{
      "type": "string"
    },
      "sites_fsi2webapp": {
      "type": "String",
      "metadata": {
        "description": ""
      }
    },
    "serverfarm_fsi2webapp": {
      "type": "String",
      "metadata": {
        "description": ""
      }
    },
     "accounts_cog_fsi2_name": {
      "type": "String",
      "metadata": {
        "description": ""
      }
    }

    

},
    "variables": {
    "tenantId": "[subscription().tenantId]"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2024-05-15",
            "name": "[parameters('cosmosdb_fsi2_name')]",
            "location": "[parameters('location')]",
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                // "enableFreeTier": true,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "createMode": "Default",
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enableBurstCapacity": false,
                "minimalTlsVersion": "Tls12",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[parameters('location')]",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Continuous",
                    "continuousModeProperties": {
                        "tier": "Continuous7Days"
                    }
                },
                "networkAclBypassResourceIds": [],
                "capacity": {
                    "totalThroughputLimit": 1000
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('cosmosdb_fsi2_name'), '/fsi-marketdata')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdb_fsi2_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "fsi-marketdata"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('cosmosdb_fsi2_name'), '/fsi-marketdata/KYC')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosdb_fsi2_name'), 'fsi-marketdata')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdb_fsi2_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "KYC",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    },
                    "computedProperties": []
                }
            }
        },
        {
      "name": "[parameters('mssql_server_name')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-05-01-preview",
      "location": "[parameters('location')]",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('mssql_administrator_login')]",
        "administratorLoginPassword": "[parameters('sql_administrator_login_password')]",
        "version": "12.0"
      }
    },
    {
      "name": "[concat(parameters('mssql_server_name'), '/', parameters('mssql_database_name'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2022-05-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('mssql_server_name'))]"
      ],
      "sku": {
        "name": "GP_S_Gen5",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 1
      },
      "kind": "v12.0,user,vcore,serverless",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "name": "[concat(parameters('mssql_server_name'), '/AllowAzureIPs')]",
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2022-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('mssql_server_name'))]",
        "[concat('Microsoft.Sql/servers/', parameters('mssql_server_name'),'/databases/' , parameters('mssql_database_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
        {
        "name": "[parameters('storage_account_name')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2020-08-01-preview",
        "location": "[parameters('location')]",
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        },
        "kind": "StorageV2",
        "properties": {
            "isHnsEnabled": "true",
            "minimumTlsVersion": "TLS1_2",
            "allowBlobPublicAccess": true,
            "networkAcls": {
            "bypass": "AzureServices",
            "defaultAction": "Allow"
            },
            "supportsHttpsTrafficOnly": true,
            "encryption": {
            "services": {
                "file": {
                "keyType": "Account",
                "enabled": true
                },
                "blob": {
                "keyType": "Account",
                "enabled": true
                }
            },
            "keySource": "Microsoft.Storage"
            },
            "accessTier": "Hot"
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
        ],
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        },
        "properties": {
            "cors": {
            "corsRules": [
                {
                "allowedOrigins": [
                    "*"
                ],
                "allowedMethods": [
                    "GET"
                ],
                "maxAgeInSeconds": 1000,
                "exposedHeaders": [
                    "*"
                ],
                "allowedHeaders": [
                    "*"
                ]
                },
                {
                "allowedOrigins": [
                    "*"
                ],
                "allowedMethods": [
                    "POST"
                ],
                "maxAgeInSeconds": 1000,
                "exposedHeaders": [
                    "*"
                ],
                "allowedHeaders": [
                    "*"
                ]
                },
                {
                "allowedOrigins": [
                    "*"
                ],
                "allowedMethods": [
                    "DELETE"
                ],
                "maxAgeInSeconds": 1000,
                "exposedHeaders": [
                    "*"
                ],
                "allowedHeaders": [
                    "*"
                ]
                },
                {
                "allowedOrigins": [
                    "*"
                ],
                "allowedMethods": [
                    "MERGE"
                ],
                "maxAgeInSeconds": 1000,
                "exposedHeaders": [
                    "*"
                ],
                "allowedHeaders": [
                    "*"
                ]
                }
            ]
            }
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default/campaign-generation-watermark-images')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default/videoassets')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default/ppploanapplication')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default/adls-core-banking-system-data')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default/kqldbdata')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },
        {
        "name": "[concat(parameters('storage_account_name'), '/default/webappassets')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },

{
        "name": "[concat(parameters('storage_account_name'), '/default/news-and-sentiment')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2020-08-01-preview",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  parameters('storage_account_name'))]"
        ],
        "properties": {
            "defaultEncryptionScope": "$account-encryption-key",
            "denyEncryptionScopeOverride": false,
            "publicAccess": "Container"
        }
        },
{
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "name": "[parameters('serverfarm_fsi2webapp')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('sites_fsi2webapp')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarm_fsi2webapp'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_fsi2webapp'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_fsi2webapp'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarm_fsi2webapp'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOTNETCORE|6.0",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('sites_fsi2webapp'), '/web')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fsi2webapp'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOTNETCORE|6.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$', parameters('sites_fsi2webapp'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
        "type": "Microsoft.CognitiveServices/accounts",
        "apiVersion": "2022-12-01",
        "name": "[parameters('accounts_cog_fsi2_name')]",
        "location": "[parameters('location')]",
        "sku": {
            "name": "S0"
        },
        "kind": "CognitiveServices",
        "properties": {
            "apiProperties": {
                "statisticsEnabled": false
            },
            "customSubDomainName": "[parameters('accounts_cog_fsi2_name')]",
            "publicNetworkAccess": "Enabled"
        }
        },
        {
        "name": "[parameters('databricks_workspace_name')]",
        "type": "Microsoft.Databricks/workspaces",
        "apiVersion": "2022-04-01-preview",
        "location": "[parameters('location')]",
        "properties": {
            "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('databricks_managed_resource_group_name'))]"
        },
        "sku": {
            "name": "premium"
        }
        },

  {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-07-31-preview",
      "name": "[parameters('userAssignedIdentities_ami_databricks_build')]",
      "location": "[parameters('location')]"
  },
  {
    "name": "[parameters('datalake_account_name')]",
    "type": "Microsoft.Storage/storageAccounts",
    "apiVersion": "2020-08-01-preview",
    "location": "[parameters('location')]",
    "sku": {
      "name": "Standard_LRS",
      "tier": "Standard"
    },
    "kind": "StorageV2",
    "properties": {
      "isHnsEnabled": "true",
      "minimumTlsVersion": "TLS1_2",
      "allowBlobPublicAccess": true,
      "networkAcls": {
        "bypass": "AzureServices",
        "defaultAction": "Allow"
      },
      "supportsHttpsTrafficOnly": true,
      "encryption": {
        "services": {
          "file": {
            "keyType": "Account",
            "enabled": true
          },
          "blob": {
            "keyType": "Account",
            "enabled": true
          }
        },
        "keySource": "Microsoft.Storage"
      },
      "accessTier": "Hot"
    }
  },
  {
    "name": "[concat(parameters('datalake_account_name'), '/default')]",
    "type": "Microsoft.Storage/storageAccounts/blobServices",
    "apiVersion": "2020-08-01-preview",
    "dependsOn": [
      "[resourceId('Microsoft.Storage/storageAccounts', parameters('datalake_account_name'))]"
    ],
    "sku": {
      "name": "Standard_LRS",
      "tier": "Standard"
    },
    "properties": {
      "cors": {
        "corsRules": [
          {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "GET"
            ],
            "maxAgeInSeconds": 1000,
            "exposedHeaders": [
              "*"
            ],
            "allowedHeaders": [
              "*"
            ]
          },
          {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "POST"
            ],
            "maxAgeInSeconds": 1000,
            "exposedHeaders": [
              "*"
            ],
            "allowedHeaders": [
              "*"
            ]
          },
          {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "DELETE"
            ],
            "maxAgeInSeconds": 1000,
            "exposedHeaders": [
              "*"
            ],
            "allowedHeaders": [
              "*"
            ]
          },
          {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "MERGE"
            ],
            "maxAgeInSeconds": 1000,
            "exposedHeaders": [
              "*"
            ],
            "allowedHeaders": [
              "*"
            ]
          }
        ]
      }
    }
  },
  {
    "name": "[concat(parameters('datalake_account_name'), '/default')]",
    "type": "Microsoft.Storage/storageAccounts/queueServices",
    "apiVersion": "2020-08-01-preview",
    "dependsOn": [
      "[resourceId('Microsoft.Storage/storageAccounts', parameters('datalake_account_name'))]"
    ],
    "properties": {
      "cors": {
        "corsRules": []
      }
    }
  },
  {
    "name": "[concat(parameters('datalake_account_name'), '/default')]",
    "type": "Microsoft.Storage/storageAccounts/tableServices",
    "apiVersion": "2020-08-01-preview",
    "dependsOn": [
      "[resourceId('Microsoft.Storage/storageAccounts', parameters('datalake_account_name'))]"
    ],
    "properties": {
      "cors": {
        "corsRules": []
      }
    }
  },
  {
    "name": "[concat(parameters('datalake_account_name'), '/default/data')]",
    "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
    "apiVersion": "2020-08-01-preview",
    "dependsOn": [
      "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('datalake_account_name'), 'default')]",
      "[resourceId('Microsoft.Storage/storageAccounts',  parameters('datalake_account_name'))]"
    ],
    "properties": {
      "defaultEncryptionScope": "$account-encryption-key",
      "denyEncryptionScopeOverride": false,
      "publicAccess": "Container"
    }
  },
  {
    "name": "[concat(parameters('datalake_account_name'), '/default/containerdatabricksmetastore')]",
    "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
    "apiVersion": "2020-08-01-preview",
    "dependsOn": [
      "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  parameters('datalake_account_name'), 'default')]",
      "[resourceId('Microsoft.Storage/storageAccounts',  parameters('datalake_account_name'))]"
    ],
    "properties": {
      "defaultEncryptionScope": "$account-encryption-key",
      "denyEncryptionScopeOverride": false,
      "publicAccess": "Container"
    }
  },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[parameters('vaults_kv_databricks_prod_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "accessPolicies": [],
        "tenantId": "[variables('tenantId')]",
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": false,
        "vaultUri": "[concat('https://', parameters('vaults_kv_databricks_prod_name'), '.vault.azure.net/')]",
        "provisioningState": "Succeeded",
        "publicNetworkAccess": "Enabled"
      }
    }

    

   
   ]
}